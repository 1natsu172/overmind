import * as vscode from 'vscode'
import { log } from './utils/Logger'
import * as path from 'path'

export class DevtoolsPanel {
  public static currentPanel: DevtoolsPanel | undefined

  public static viewType = 'overmindDevtools'

  private readonly _panel: vscode.WebviewPanel

  private _disposables: vscode.Disposable[] = []

  public static markup: string = ''

  private constructor(panel: vscode.WebviewPanel, extensionPath: string) {
    this._panel = panel
    this.update()

    this._panel.onDidDispose(() => this.dispose(), null, this._disposables)

    this._panel.onDidChangeViewState(
      (e) => {
        if (this._panel.visible) {
          this.update()
        }
      },
      null,
      this._disposables
    )

    this._panel.webview.onDidReceiveMessage(
      (message) => {
        switch (message.command) {
          case 'alert':
            vscode.window.showErrorMessage(message.text)
        }
      },
      null,
      this._disposables
    )
  }

  dispose(): any {
    DevtoolsPanel.currentPanel = undefined
    this._panel.dispose()
    while (this._disposables.length) {
      const x = this._disposables.pop()
      if (x) {
        x.dispose()
      }
    }
  }

  private update() {
    log('Extension.update')
    this._panel.webview.html = this.getHtmlForWevbiew()
  }

  private getHtmlForWevbiew(): string {
    return DevtoolsPanel.markup
  }

  static createOrShow(extensionPath: string) {
    const column = vscode.window.activeTextEditor
      ? vscode.window.activeTextEditor.viewColumn
      : undefined

    if (DevtoolsPanel.currentPanel) {
      DevtoolsPanel.currentPanel._panel.reveal(column)
      return
    }
    const panel = vscode.window.createWebviewPanel(
      DevtoolsPanel.viewType,
      'Overmind',
      column || vscode.ViewColumn.One,
      {
        enableScripts: true,
        retainContextWhenHidden: true,
        localResourceRoots: [
          vscode.Uri.file(path.join(extensionPath, 'devtoolsDist')),
        ],
      }
    )

    DevtoolsPanel.currentPanel = new DevtoolsPanel(panel, extensionPath)
  }

  static revive(webViewPanel: vscode.WebviewPanel, extensionPath: string) {
    DevtoolsPanel.currentPanel = new DevtoolsPanel(webViewPanel, extensionPath)
  }
}
