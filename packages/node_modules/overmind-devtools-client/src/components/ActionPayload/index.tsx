import { createElement } from 'overmind-components'

import { Component } from '../../overmind'
import { isValidJson } from '../../overmind/utils'
import { colors } from '../../theme'
import * as styles from './styles'

const ActionPayload: Component = (_, { appState, actions, reaction }) => {
  const payload = appState.currentApp.actionQueryPayload

  return (
    <self className={styles.wrapper}>
      <input
        onMount={(input: HTMLInputElement) =>
          reaction(
            () => appState.currentApp.selectedActionQuery,
            () => setTimeout(() => input.focus())
          )
        }
        style={{
          borderColor:
            !payload || isValidJson(payload) ? 'transparent' : colors.red,
        }}
        disabled={
          !appState.currentApp.selectedActionQuery || appState.isExecutingAction
        }
        placeholder={
          appState.currentApp.selectedActionQuery
            ? 'Add some JSON payload...'
            : ''
        }
        onKeyDown={(event) => {
          if (event.keyCode === 13) {
            actions.executeAction()
          }
        }}
        className={styles.input}
        value={payload}
        onChange={(event) =>
          actions.setActionQueryPayload(event.currentTarget.value)
        }
      />
    </self>
  )
}

export default ActionPayload
