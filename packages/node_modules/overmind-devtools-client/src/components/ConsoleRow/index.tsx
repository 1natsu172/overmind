import { createElement } from 'overmind-components'

import { Component } from '../../overmind'
import { AppMessage } from '../../overmind/types'
import Inspector from '../Inspector'
import * as styles from './styles'

type Props = {
  message: AppMessage<any>
}
const ConsoleRow: Component<Props, string[]> = (
  { message },
  { state = [], changeState }
) => {
  function onToggleExpand(pathArray: string[]) {
    const expandedPathsCopy = state.slice()
    const path = pathArray.join('.')

    if (expandedPathsCopy.includes(path)) {
      expandedPathsCopy.splice(expandedPathsCopy.indexOf(path), 1)
    } else {
      expandedPathsCopy.push(path)
    }

    changeState(expandedPathsCopy)
  }

  return (
    <self className={styles.wrapper}>
      <div className={styles.type}>{message.type}</div>
      <Inspector
        value={message.data}
        expandedPaths={state}
        onToggleExpand={onToggleExpand}
      />
    </self>
  )
}

export default ConsoleRow
