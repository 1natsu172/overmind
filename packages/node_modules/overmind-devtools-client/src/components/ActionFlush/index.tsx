import { css } from 'emotion'
import { createElement } from 'overmind-components'

import { Component } from '../../overmind'
import { Flush as FlushType } from '../../overmind/types'
import * as textStyles from '../../styles/text'
import * as actionStyles from '../Action/styles'
import * as styles from './styles'

type Props = {
  flush: FlushType
}

const ActionFlush: Component<Props> = ({ flush }, { appState }) => (
  <self className={styles.flush}>
    <div className={styles.flushHeader}>
      <span>{flush.components.length} ?</span>
      <span>{flush.derived.length} ?</span>
    </div>
    {flush.components.length || flush.derived.length ? (
      <div className={styles.flushBody}>
        {flush.components.map((componentId) => (
          <div key={componentId}>
            <span className={css(textStyles.description, styles.flushItem)}>
              <span className={styles.icon}>?</span>{' '}
              {appState.currentApp.components[componentId].name}
            </span>
          </div>
        ))}
        {flush.derived.map((derivedPath, index) => (
          <div key={derivedPath + '_' + index}>
            <span className={css(textStyles.description, styles.flushItem)}>
              <span className={styles.icon}>?</span> {derivedPath}
            </span>
          </div>
        ))}
      </div>
    ) : null}
  </self>
)

export default ActionFlush
