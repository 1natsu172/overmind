import { createElement, FunctionComponent, useEffect, useRef } from 'react'
import { useOvermind } from '../../overmind'

const AppHostIFrame: FunctionComponent = () => {
  const { state, actions } = useOvermind()
  const ref = useRef(null)

  useEffect(() => {
    const listener = (event: KeyboardEvent) => {
      if (event.metaKey && event.keyCode === 82) {
        if (state.appHost) {
          console.clear()
          // eslint-disable-next-line
          ref.current.src = ref.current.src
        } else {
          actions.refreshApp()
        }
      }
    }
    document.addEventListener('keydown', listener)

    return () => {
      document.removeEventListener('keydown', listener)
    }
  }, [])

  if (!state.appHost) {
    return null
  }

  return (
    <iframe
      ref={ref}
      key={state.appHost}
      src={state.appHost + '?OVERMIND_DEVTOOL=true'} 
      onLoad={(event) => {
        actions.onAppHostConnected()
      }}
      style={{
        position: 'absolute',
        top: -99999
      }}
    />
  )
}

export default AppHostIFrame