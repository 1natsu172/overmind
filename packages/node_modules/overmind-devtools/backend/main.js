const electron = require('electron')
const app = electron.app
const appVersion = app.getVersion()
const BrowserWindow = electron.BrowserWindow
const path = require('path')
const ConnectionManager = require('./ConnectionManager')

process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = 'true'

function createWindow() {
  const mainWindow = new BrowserWindow({
    icon: path.resolve('icons', 'icon.png'),
    height: 768,
    width: 768,
    minHeight: 768,
    minWidth: 768,
  })
  const connectionManager = new ConnectionManager(mainWindow)

  mainWindow.on('closed', () => app.quit())

  if (process.env.NODE_ENV === 'production') {
    mainWindow.loadFile(path.join(__dirname, '..', 'dist', 'index.html'))
  } else {
    mainWindow.webContents.openDevTools()
    mainWindow.loadFile(path.join(__dirname, 'dev.html'))
  }

  electron.Menu.setApplicationMenu(
    electron.Menu.buildFromTemplate([
      {
        label: 'Application',
        submenu: [
          { label: 'Overmind Devtools v' + appVersion },
          { type: 'separator' },
          {
            label: 'Debug',
            click() {
              mainWindow.openDevTools()
            },
          },
          {
            label: 'Learn More',
            click() {
              require('electron').shell.openExternal('https://overmindjs.org')
            },
          },
          {
            label: 'License',
            click() {
              require('electron').shell.openExternal(
                'https://github.com/cerebral/overmind/blob/master/LICENSE'
              )
            },
          },
          { type: 'separator' },
          { role: 'quit' },
        ],
      },
      {
        label: 'Edit',
        submenu: [
          { role: 'undo' },
          { role: 'redo' },
          { type: 'separator' },
          { role: 'cut' },
          { role: 'copy' },
          { role: 'paste' },
          { role: 'selectall' },
        ],
      },
    ])
  )

  electron.ipcMain.on('relaunch', () => {
    app.relaunch()
    app.quit()
  })

  electron.ipcMain.on('message', connectionManager.onDevtoolsMessage)
  electron.ipcMain.on('connect', connectionManager.connect)
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)
